ASSEMBLERS_BLOCKS = M_assemble_blocks.o
ASSEMBLERS_PP = rotate_PP.o M_assemble_PP_3c.o M_assemble_PP_2c.o
ASSEMBLERS_HARRIS =  M_assemble_2c_Harris.o M_assemble_3c_Harris.o M_assemble_ewald_Harris.o M_assemble_rho_McWEDA_Harris.o M_assemble_vxc_McWEDA_Harris.o M_assemble_usr_McWEDA_Harris.o M_assemble_ewald_Harris.o
ASSEMBLERS_DOGS = M_assemble_2c_DOGS.o M_assemble_3c_DOGS.o M_assemble_ewald_DOGS.o M_assemble_rho_McWEDA_DOGS.o M_assemble_vxc_McWEDA_DOGS.o M_assemble_usr_McWEDA_DOGS.o M_assemble_ewald_DOGS.o
ASSEMBLERS_KS = M_assemble_3c_Harris.o M_assemble_ewald_DOGS.o M_assemble_rho_McWEDA_DOGS.o


all: libthd_ASSEMBLERS_HARRIS.a libthd_ASSEMBLERS_DOGS.a libthd_ASSEMBLERS_KS.a

.PHONY: clean

clean:
	rm -rf *.a *.o *.mod *genmod.f90 *~

libthd_ASSEMBLERS_HARRIS.a: $(ASSEMBLERS_HARRIS)
	ar rcs $@ $^ && mv $@ ../libs && cp *.mod ../include

libthd_ASSEMBLERS_DOGS.a: $(ASSEMBLERS_DOGS)
	ar rcs $@ $^ && mv $@ ../libs && cp *.mod ../include

libthd_ASSEMBLERS_KS.a: $(ASSEMBLERS_KS)
	ar rcs $@ $^ && mv $@ ../libs && cp *.mod ../include

libthd_ASSEMBLERS_BLOCKS.a: $(ASSEMBLERS_BLOCKS)
	ar rcs $@ $^ && mv $@ ../libs && cp *.mod ../include

libthd_ASSEMBLERS_PP.a: $(ASSEMBLERS_PP)
	ar rcs $@ $^ && mv $@ ../libs && cp *.mod ../include

%.o: %.f90
	${F90} ${FFLAGS} -c $< -I../include
