# @configure_input@

# Package-related substitution variables
package        = @PACKAGE_NAME@
version        = @PACKAGE_VERSION@
tarname        = @PACKAGE_TARNAME@
distdir        = $(tarname)-$(version)

# Prefix-related substitution variables
prefix         = @prefix@
exec_prefix    = @exec_prefix@
bindir         = @bindir@

# Tool-related substitution variables
FC             = @FC@
DEFS           = @DEFS@
LIBS           = @LIBS@
FCFLAGS        = @FCFLAGS@
INSTALL        = @INSTALL@
INSTALL_DATA   = @INSTALL_DATA@
INSTALL_PROGRAM= @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

# VPATH-related substitution variables
top_builddir   = @top_builddir@
builddir       = @builddir@
srcdir         = @srcdir@
VPATH          = @srcdir@

# Fireball substitution variables
THEORY         = @THEORY@
METHOD         = @METHOD@
XC             = @XC@
OPENMP         = @OPENMP@
MPI            = @MPI@
DEBUG          = @DEBUG@
MODE           = @MODE@
MACHINE        = @MACHINE@
COMPILER       = @COMPILER@
LINALG         = @LINALG@

all:
	$(MAKE) -C src libs

clean check install uninstall:
	$(MAKE) -C src $@

cleanall:
	$(MAKE) -C src $@

distclean: cleanall
	rm -rf autom4te.cache config.log config.status
	rm -rf Makefile
	rm -rf src/Makefile
	rm -rf src/*/Makefile
	rm -rf $(distdir).tar.gz

dist: $(distdir).tar.gz

$(distdir).tar.gz: FORCE $(distdir)
	tar chof - $(distdir) | gzip -9 -c >$(distdir).tar.gz
	rm -rf $(distdir)

$(distdir): cleanall
	mkdir -p $(distdir)/src
	cp $(srcdir)/configure $(distdir)
	cp $(srcdir)/config.h.in $(distdir)
	cp $(srcdir)/install-sh $(distdir)
	cp $(srcdir)/Makefile.in $(distdir)
	cp $(srcdir)/src/Makefile.in $(distdir)/src
	cp -rL $(srcdir)/src/a.GLOBAL $(distdir)/src
	cp -rL $(srcdir)/src/b.FUNCTIONS $(distdir)/src
	cp -rL $(srcdir)/src/c.SYSTEM $(distdir)/src
	cp -rL $(srcdir)/src/d.FUNCTIONS_EXTRA $(distdir)/src
	cp -rL $(srcdir)/src/e.FDATA $(distdir)/src
	cp -rL $(srcdir)/src/f.MPI $(distdir)/src
	cp -rL $(srcdir)/src/g.XC_FUNCTIONALS $(distdir)/src
	cp -rL $(srcdir)/src/h.SOLVESH $(distdir)/src
	cp -rL $(srcdir)/src/j.ASSEMBLERS $(distdir)/src
	cp -rL $(srcdir)/src/k.DASSEMBLERS $(distdir)/src
	cp -rL $(srcdir)/src/l.SCF $(distdir)/src
	cp -rL $(srcdir)/src/m.MD $(distdir)/src
	cp -rL $(srcdir)/src/n.NAMD $(distdir)/src
	cp -rL $(srcdir)/src/o.OUTPUT $(distdir)/src
	cp -rL $(srcdir)/src/p.THEORY $(distdir)/src
	cp -rL $(srcdir)/src/u.UTIL $(distdir)/src
	cp -rL $(srcdir)/src/MACHINES $(distdir)/src
	cp -rL $(srcdir)/src/include $(distdir)/src
	cp -rL $(srcdir)/src/libs $(distdir)/src
	rm -rf $(distdir)/Makefile
	rm -rf $(distdir)/src/Makefile
	rm -rf $(distdir)/src/*/Makefile

distcheck: $(distdir).tar.gz
	gzip -cd $+ | tar xvf -
	cd $(distdir); ./configure FC=@FC@ --enable-THEORY=DOGS --enable-DEBUG --enable-LINALG=LAPACK
	$(MAKE) -C $(distdir) all check
	$(MAKE) -C $(distdir) DESTDIR=$${PWD}/$(distdir)/_inst install uninstall
	$(MAKE) -C $(distdir) clean
	rm -rf $(distdir)
	@echo "*** Package $(distdir).tar.gz is ready for distribution."

Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

FORCE:
	-rm -rf $(distdir) &>/dev/null
	-rm $(distdir).tar.gz &>/dev/null

.PHONY: FORCE all clean check dist distcheck install uninstall
